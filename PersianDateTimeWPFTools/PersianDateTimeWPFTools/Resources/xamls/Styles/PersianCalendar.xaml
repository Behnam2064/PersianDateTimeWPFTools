<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:primitives="clr-namespace:PersianDateTimeWPFTools.Windows.Controls.Primitives"
    xmlns:tools="clr-namespace:PersianDateTimeWPFTools.Tools"
    xmlns:pdtwt="clr-namespace:PersianDateTimeWPFTools.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/PersianDateTimeWPFTools;component/Resources/xamls/Styles/button.xaml" />

        <!--Use=>ButtonCustom-->
        <ResourceDictionary
            Source="pack://application:,,,/PersianDateTimeWPFTools;component/Resources/PredefiendDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>



    <SolidColorBrush
        x:Key="DayButtonHighlightBorderBrushMouseOver"
        Color="#dcedf4" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBackgroundMouseOver"
        Color="#FFD7EBF3" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBorderBrushPressed"
        Color="#45d6fa" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBackgroundPressed"
        Color="#cbe5ee" />


    <SolidColorBrush
        x:Key="DayButtonHighlightBorderBrushToday"
        Color="#aaaaaa" />
    <SolidColorBrush
        x:Key="DayButtonHighlightBackgroundToday"
        Color="#aaaaaa" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBorderBrushTodaySelected"
        Color="#74d5ee" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBackgroundTodaySelected"
        Color="#b6d0d9" />


    <SolidColorBrush
        x:Key="DayButtonHighlightBorderBrushTodayMouseOver"
        Color="#b2c3c9" />

    <SolidColorBrush
        x:Key="DayButtonHighlightBackgroundTodaySelectedMouseOver"
        Color="#b2c3c9" />

    <SolidColorBrush
        x:Key="DayButtonBlackoutForeground"
        Color="#FFE84040" />

    <SolidColorBrush
        x:Key="DayButtonBlackoutBackgroundToday"
        Color="#FFA06E6E" />


    <SolidColorBrush
        x:Key="DayButtonBlackoutSelectedBorderBrush"
        Color="#FFE84040" />


    <SolidColorBrush
        x:Key="DayButtonBlackoutSelectedBackground"
        Color="#FFF7C6C6" />


    <SolidColorBrush
        x:Key="DayButtonInactiveForeground"
        Color="#FFBBBBBB" />


    <Style
        x:Key="DefaultPersianCalendarItemStyle"
        TargetType="{x:Type primitives:CalendarItem}">
        <Setter
            Property="Control.HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="Background"
            Value="#FFEFEFEF" />
        <Setter
            Property="Control.VerticalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="primitives:ControlHelper.CornerRadius"
            Value="{DynamicResource ControlCornerRadius}" />
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type primitives:CalendarItem}">
                    <FrameworkTemplate.Resources>
                        <Style
                            TargetType="{x:Type TextBlock}"
                            x:Key="WeekDayNameStyle">
                            <Setter
                                Property="TextBlock.FontWeight"
                                Value="Normal" />
                            <Setter
                                Property="TextBlock.FontSize"
                                Value="12" />
                            <Setter
                                Property="TextBlock.TextTrimming"
                                Value="None" />
                            <Setter
                                Property="TextBlock.TextWrapping"
                                Value="Wrap" />
                            <Setter
                                Property="TextBlock.LineStackingStrategy"
                                Value="MaxHeight" />
                            <Setter
                                Property="FrameworkElement.HorizontalAlignment"
                                Value="Center" />
                            <Setter
                                Property="FrameworkElement.VerticalAlignment"
                                Value="Center" />
                        </Style>
                        <DataTemplate
                            x:Key="DayTitleTemplate">
                            <TextBlock
                                Style="{StaticResource WeekDayNameStyle}"
                                Text="{Binding}" />
                        </DataTemplate>
                        <StreamGeometry
                            x:Key="ChevronDown">
                            M 18.935547 4.560547 L 19.814453 5.439453 L 10 15.253906 L 0.185547 5.439453 L 1.064453 4.560547 L 10 13.496094 Z
                        </StreamGeometry>
                        <StreamGeometry
                            x:Key="ChevronUp">
                            M 19.091797 14.970703 L 10 5.888672 L 0.908203 14.970703 L 0.029297 14.091797 L 10 4.111328 L 19.970703 14.091797 Z
                        </StreamGeometry>
                        <DataTemplate
                            x:Key="IconTemplate">
                            <primitives:FontIconFallback
                                Data="{Binding}" />
                        </DataTemplate>
                    </FrameworkTemplate.Resources>
                    <Grid
                        x:Name="PART_Root"
                        SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <Style
                                TargetType="{x:Type Button}"
                                x:Key="NavigationButtonStyle"
                                BasedOn="{StaticResource DefaultButtonStyle}">
                                <Setter
                                    Property="FrameworkElement.HorizontalAlignment"
                                    Value="Stretch" />
                                <Setter
                                    Property="FrameworkElement.VerticalAlignment"
                                    Value="Stretch" />
                                <Setter
                                    Property="FrameworkElement.FocusVisualStyle"
                                    Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                                <Setter
                                    Property="primitives:FocusVisualHelper.UseSystemFocusVisuals"
                                    Value="{DynamicResource UseSystemFocusVisuals}" />
                                <Setter
                                    Property="Control.FontSize"
                                    Value="20" />
                                <Setter
                                    Property="Control.Background"
                                    Value="{DynamicResource CalendarViewNavigationButtonBackground}" />
                                <Setter
                                    Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate
                                            TargetType="{x:Type Button}">
                                            <Border
                                                Background="{TemplateBinding Control.Background}"
                                                Margin="{TemplateBinding Control.Padding}">
                                                <Border
                                                    x:Name="Border"
                                                    BorderBrush="{DynamicResource CalendarViewNavigationButtonBorderBrush}"
                                                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                                                    <ContentPresenter
                                                        x:Name="Text"
                                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger
                                                    Property="UIElement.IsMouseOver"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="Border"
                                                        Value="{DynamicResource CalendarViewNavigationButtonBorderBrushPointerOver}"
                                                        Property="Border.BorderBrush" />
                                                    <Setter
                                                        TargetName="Text"
                                                        Value="{DynamicResource CalendarViewNavigationButtonForegroundPointerOver}"
                                                        Property="TextElement.Foreground" />
                                                </Trigger>
                                                <Trigger
                                                    Property="ButtonBase.IsPressed"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="Text"
                                                        Value="{DynamicResource CalendarViewNavigationButtonForegroundPressed}"
                                                        Property="TextElement.Foreground" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ControlTemplate
                                x:Key="PreviousButtonTemplate"
                                TargetType="{x:Type Button}">
                                <Grid
                                    Cursor="Hand">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup
                                            x:Name="CommonStates">
                                            <VisualState
                                                x:Name="Normal" />
                                            <VisualState
                                                x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To="#FF73A9D8"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState
                                                x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To=".5"
                                                        Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle
                                        Fill="#11E5EBF1"
                                        Opacity="1"
                                        Stretch="Fill" />
                                    <Grid>
                                        <Path
                                            x:Name="path"
                                            Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                            Fill="#FF333333"
                                            HorizontalAlignment="Left"
                                            Height="10"
                                            Margin="14,-6,0,0"
                                            Stretch="Fill"
                                            VerticalAlignment="Center"
                                            Width="6" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate
                                x:Key="TodayButtonTemplate"
                                TargetType="{x:Type Button}">
                                <Grid
                                    Cursor="Hand">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup
                                            x:Name="CommonStates">
                                            <VisualState
                                                x:Name="Normal" />
                                            <VisualState
                                                x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To="#FF73A9D8"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState
                                                x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To=".5"
                                                        Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle
                                        Fill="#11E5EBF1"
                                        Opacity="1"
                                        Stretch="Fill" />
                                    <Grid>
                                        <Path
                                            x:Name="path"
                                            Data="M184.858,1143.56 C185.397,1143.02 186.009,1142.55 186.009,1142 C186.009,1141.45 185.562,1141 185.009,1141 L175.009,1141 C174.888,1141 174.009,1141 174.009,1142 L174.009,1152 C174.009,1152.55 174.457,1153 175.009,1153 C175.562,1153 175.947,1152.47 176.373,1152.05 L179.152,1149.27 C180.922,1151.36 182,1154.05 182,1157 C182,1163.63 176.627,1169 170,1169 C163.373,1169 158,1163.63 158,1157 C158,1151.06 162.327,1146.13 168,1145.18 L168,1141.14 C160.109,1142.12 154,1148.84 154,1157 C154,1165.84 161.164,1173 170,1173 C178.836,1173 186,1165.84 186,1157 C186,1152.94 184.484,1149.25 181.993,1146.43 L184.858,1143.56"
                                            Fill="#FF333333"
                                            HorizontalAlignment="Center"
                                            Height="10"
                                            Margin="14,-6,0,0"
                                            Stretch="Fill"
                                            VerticalAlignment="Center"
                                            Width="10" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate
                                x:Key="NextButtonTemplate"
                                TargetType="{x:Type Button}">
                                <Grid
                                    Cursor="Hand">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup
                                            x:Name="CommonStates">
                                            <VisualState
                                                x:Name="Normal" />
                                            <VisualState
                                                x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To="#FF73A9D8"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState
                                                x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="path"
                                                        To=".5"
                                                        Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle
                                        Fill="#11E5EBF1"
                                        Opacity="1"
                                        Stretch="Fill" />
                                    <Grid>
                                        <Path
                                            x:Name="path"
                                            Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                            Fill="#FF333333"
                                            HorizontalAlignment="Right"
                                            Height="10"
                                            Margin="0,-6,14,0"
                                            Stretch="Fill"
                                            VerticalAlignment="Center"
                                            Width="6" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate
                                x:Key="HeaderButtonTemplate"
                                TargetType="{x:Type Button}">
                                <Grid
                                    Cursor="Hand">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup
                                            x:Name="CommonStates">
                                            <VisualState
                                                x:Name="Normal" />
                                            <VisualState
                                                x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="buttonContent"
                                                        To="#FF73A9D8"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState
                                                x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Duration="0"
                                                        Storyboard.TargetName="buttonContent"
                                                        To=".5"
                                                        Storyboard.TargetProperty="Opacity" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter
                                        x:Name="buttonContent"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        TextElement.Foreground="#FF333333"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="1,4,1,9"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </ControlTemplate>
                            <SolidColorBrush
                                x:Key="DisabledColor"
                                Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}">
                            <Border
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                CornerRadius="1">
                                <Grid
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition
                                            Height="40" />
                                        <RowDefinition
                                            Height="*" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Column="0"
                                        Grid.Row="0"
                                        Focusable="False"
                                        Width="28" 
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        Template="{StaticResource PreviousButtonTemplate}"
                                        />
                                    <!--Style="{StaticResource NavigationButtonStyle}"-->
                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Column="1"
                                        Focusable="False"
                                        FontWeight="Bold"
                                        HorizontalAlignment="Center"
                                        Grid.Row="0"
                                        Style="{StaticResource NavigationButtonStyle}"
                                        Template="{StaticResource HeaderButtonTemplate}"
                                        VerticalAlignment="Center" />
                                    <!--Style="{StaticResource NavigationButtonStyle}"-->
                                    <DockPanel LastChildFill="False"
                                               Grid.Row="0"
                                                Grid.Column="2"
                                               HorizontalAlignment="Right"
                                               >
                                        <Button
                                            x:Name="PART_GoToTodayButton"
                                            Focusable="False"
                                            Template="{StaticResource TodayButtonTemplate}"
                                            Width="{Binding ElementName=PART_NextButton, Mode=OneWay, Path=Width, UpdateSourceTrigger=PropertyChanged}"
                                            Height="{Binding ElementName=PART_NextButton, Mode=OneWay, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                                            >

                                        </Button>

                                        <Button
                                        x:Name="PART_NextButton"
                                        Width="28" 
                                        Height="20"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}"
                                        />
                                        <!--HorizontalAlignment="Right"-->
                                        <!--Style="{StaticResource NavigationButtonStyle}"-->

                                    </DockPanel>

                                    <Rectangle
                                        x:Name="BackgroundLayer"
                                        Fill="{TemplateBinding Control.BorderBrush}"
                                        Margin="0,38,0,0" />


                                    <Grid
                                        x:Name="PART_MonthView"
                                        Visibility="Visible"
                                        TextElement.Foreground="{DynamicResource CalendarViewCalendarItemForeground}"
                                        Grid.ColumnSpan="3"
                                        HorizontalAlignment="Stretch"
                                        Margin="6,-1,6,6"
                                        Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition
                                                Height="38" />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.ColumnSpan="3"
                                        HorizontalAlignment="Stretch"
                                        Margin="6,-3,7,6"
                                        Grid.Row="1"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                    </Grid>

                                    <Button
                                        Visibility="Collapsed"
                                        Name="PART_ButtonConfirm"
                                        Margin="0,10"
                                        Grid.Row="2"
                                        Style="{StaticResource ButtonCustom}"
                                        HorizontalAlignment="Center"
                                        Content="{DynamicResource ConfirmText}" />
                                </Grid>
                            </Border>
                        </Border>

                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2"
                            Stroke="{StaticResource DisabledColor}"
                            Stretch="Fill"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter
                                TargetName="PART_MonthView"
                                Value="{DynamicResource CalendarViewWeekDayForegroundDisabled}"
                                Property="TextElement.Foreground" />
                        </Trigger>
                        <DataTrigger
                            Value="Year"
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type pdtwt:PersianCalendar}}}">
                            <Setter
                                TargetName="PART_MonthView"
                                Property="UIElement.Visibility"
                                Value="Hidden" />
                            <Setter
                                TargetName="PART_YearView"
                                Property="UIElement.Visibility"
                                Value="Visible" />
                            <!--<Setter
                                TargetName="BackgroundLayer"
                                Property="FrameworkElement.Margin"
                                Value="0" />-->
                        </DataTrigger>
                        <DataTrigger
                            Value="Decade"
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type pdtwt:PersianCalendar}}}">
                            <Setter
                                TargetName="PART_MonthView"
                                Property="UIElement.Visibility"
                                Value="Hidden" />
                            <Setter
                                TargetName="PART_YearView"
                                Property="UIElement.Visibility"
                                Value="Visible" />
                            <!--<Setter
                                TargetName="BackgroundLayer"
                                Property="FrameworkElement.Margin"
                                Value="0" />-->
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type primitives:CalendarItem}"
        BasedOn="{StaticResource DefaultPersianCalendarItemStyle}" />
    <Style
        x:Key="DefaultPersianCalendarDayButtonStyle"
        TargetType="{x:Type primitives:CalendarDayButton}">
        <Setter
            Property="Control.Background"
            Value="{DynamicResource CalendarViewCalendarItemRevealBackground}" />
        <Setter
            Property="Control.Foreground"
            Value="{DynamicResource CalendarViewCalendarItemForeground}" />
        <Setter
            Property="Control.BorderBrush"
            Value="{DynamicResource CalendarViewCalendarItemRevealBorderBrush}" />
        <Setter
            Property="Control.BorderThickness"
            Value="1" />
        <Setter
            Property="FrameworkElement.MinWidth"
            Value="40" />
        <Setter
            Property="FrameworkElement.MinHeight"
            Value="40" />
        <Setter
            Property="FrameworkElement.Margin"
            Value="1" />
        <Setter
            Property="Control.FontSize"
            Value="20" />
        <Setter
            Property="Control.HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="Control.VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="FrameworkElement.FocusVisualStyle"
            Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter
            Property="primitives:FocusVisualHelper.UseSystemFocusVisuals"
            Value="True" />
        <Setter
            Property="primitives:FocusVisualHelper.FocusVisualMargin"
            Value="-2" />
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type primitives:CalendarDayButton}">
                    <Grid
                        SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="DayStates">
                                <primitives:VisualStateGroupListener.Listener>
                                    <primitives:VisualStateGroupListener
                                        x:Name="DayStatesListener" />
                                </primitives:VisualStateGroupListener.Listener>
                                <VisualState
                                    x:Name="RegularDay" />
                                <VisualState
                                    x:Name="Today" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Margin="-1" />
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Control.Background}" />
                        <Border
                            x:Name="HighlightBorder"
                            BorderThickness="2" />
                        <TextBlock
                            x:Name="NormalText"
                            FontFamily="{TemplateBinding Control.FontFamily}"
                            FontSize="{TemplateBinding Control.FontSize}"
                            FontWeight="{TemplateBinding Control.FontWeight}"
                            Text="{TemplateBinding ContentControl.Content}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
              <UIElement.RenderTransform>
                <TranslateTransform
                                    Y="-1" />
              </UIElement.RenderTransform>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver"
                                           Value="True"/>
                                <Condition Property="primitives:CalendarDayButton.IsInactive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushMouseOver}"
                                Property="Border.BorderBrush" />
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundMouseOver}"
                                Property="Border.Background" />
                        </MultiTrigger>

                        <!--<Trigger
                            Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushMouseOver}"
                                Property="Border.BorderBrush" />
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundMouseOver}"
                                Property="Border.Background" />
                        </Trigger>-->

                        <Trigger
                            Property="primitives:CalendarDayButton.IsSelected"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushPressed}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundPressed}"
                                Property="Border.Background" />
                        </Trigger>
                        <!--<Trigger
                            Property="primitives:CalendarDayButton.IsToday"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushToday}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundToday}"
                                Property="Border.Background" />
                        </Trigger>-->

                        <!--Start-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsToday"
                                    Value="True" />
                                <Condition
                                    SourceName="DayStatesListener"
                                    Property="primitives:VisualStateGroupListener.CurrentStateName"
                                    Value="Today" />

                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushToday}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundToday}"
                                Property="Border.Background" />
                        </MultiTrigger>

                        <!--End-->







                        <Trigger
                            Property="primitives:CalendarDayButton.IsSelected"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource CalendarViewSelectedBorderBrush}"
                                Property="Border.BorderBrush" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="UIElement.IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBorderBrushTodayMouseOver}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBackgroundTodaySelectedMouseOver}"
                                Property="Border.Background" />
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="ButtonBase.IsPressed"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBorderBrushPressed}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundPressed}"
                                Property="Border.Background" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsSelected"
                                    Value="True" />
                                <Condition
                                    Property="primitives:CalendarDayButton.IsToday"
                                    Value="True" />
                                <Condition
                                    SourceName="DayStatesListener"
                                    Property="primitives:VisualStateGroupListener.CurrentStateName"
                                    Value="Today" />
                            </MultiTrigger.Conditions>

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBorderBrushTodaySelected}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBackgroundTodaySelected}"
                                Property="Border.Background" />
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsMouseOver"
                                    Value="True" />
                                <Condition
                                    Property="primitives:CalendarDayButton.IsToday"
                                    Value="True" />
                                <Condition
                                    SourceName="DayStatesListener"
                                    Property="primitives:VisualStateGroupListener.CurrentStateName"
                                    Value="Today" />
                            </MultiTrigger.Conditions>

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBorderBrushTodaySelected}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBackgroundTodaySelected}"
                                Property="Border.Background" />
                        </MultiTrigger>


                        <Trigger
                            Property="primitives:CalendarDayButton.IsInactive"
                            Value="True">
                            <Setter
                                TargetName="Background"
                                Value="{DynamicResource SystemControlDisabledChromeMediumLowBrush}"
                                Property="Shape.Fill" />
                        </Trigger>
                        <Trigger
                            SourceName="DayStatesListener"
                            Property="primitives:VisualStateGroupListener.CurrentStateName"
                            Value="Today">
                            <Setter
                                TargetName="Background"
                                Value="{DynamicResource SystemControlHighlightAccentBrush}"
                                Property="Shape.Fill" />
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource CalendarViewTodayForeground}"
                                Property="TextBlock.Foreground" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsBlackedOut"
                                    Value="True" />
                                <Condition
                                    SourceName="DayStatesListener"
                                    Property="primitives:VisualStateGroupListener.CurrentStateName"
                                    Value="RegularDay" />

                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource DayButtonBlackoutForeground}"
                                Property="TextBlock.Foreground" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsBlackedOut"
                                    Value="True" />
                                <Condition
                                    SourceName="DayStatesListener"
                                    Property="primitives:VisualStateGroupListener.CurrentStateName"
                                    Value="Today" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="Background"
                                Property="UIElement.Opacity"
                                Value="0.5" />
                            <Setter
                                TargetName="NormalText"
                                Property="UIElement.Opacity"
                                Value="0.8" />

                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource DayButtonBlackoutForeground}"
                                Property="TextBlock.Foreground" />

                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource DayButtonBlackoutBackgroundToday}"
                                Property="TextBlock.Foreground" />

                        </MultiTrigger>

                        
                      
                        

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarDayButton.IsBlackedOut"
                                    Value="True" />
                                <Condition
                                    Property="primitives:CalendarDayButton.IsSelected"
                                    Value="True" />

                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource DayButtonBlackoutForeground}"
                                Property="TextBlock.Foreground" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonBlackoutSelectedBorderBrush}"
                                Property="Border.BorderBrush" />

                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonBlackoutSelectedBackground}"
                                Property="Border.Background" />

                        </MultiTrigger>


                        <Trigger
                            Property="primitives:CalendarDayButton.IsInactive"
                            Value="True">
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource DayButtonInactiveForeground}"
                                Property="TextBlock.Foreground" />
                        </Trigger>
                        <Trigger
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource CalendarViewBlackoutForeground}"
                                Property="TextBlock.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type primitives:CalendarDayButton}"
        BasedOn="{StaticResource DefaultPersianCalendarDayButtonStyle}" />
    <Style
        x:Key="DefaultPersianCalendarButtonStyle"
        TargetType="{x:Type primitives:CalendarButton}">
        <Setter
            Property="Control.Background"
            Value="{DynamicResource CalendarViewCalendarItemRevealBackground}" />
        <Setter
            Property="Control.Foreground"
            Value="{DynamicResource CalendarViewCalendarItemForeground}" />
        <Setter
            Property="Control.BorderBrush"
            Value="{DynamicResource CalendarViewCalendarItemRevealBorderBrush}" />
        <Setter
            Property="Control.BorderThickness"
            Value="1" />
        <Setter
            Property="FrameworkElement.MinWidth"
            Value="40" />
        <Setter
            Property="FrameworkElement.MinHeight"
            Value="42" />
        <Setter
            Property="FrameworkElement.Margin"
            Value="1" />
        <Setter
            Property="Control.FontSize"
            Value="20" />
        <Setter
            Property="Control.FontWeight"
            Value="Normal" />
        <Setter
            Property="Control.HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="Control.VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="FrameworkElement.FocusVisualStyle"
            Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter
            Property="primitives:FocusVisualHelper.UseSystemFocusVisuals"
            Value="True" />
        <Setter
            Property="primitives:FocusVisualHelper.FocusVisualMargin"
            Value="-2" />
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type primitives:CalendarButton}">
                    <Grid
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="Background"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Margin="-1" />
                        <Border
                            x:Name="HighlightBorder"
                            BorderThickness="2" />
                        <TextBlock
                            x:Name="NormalText"
                            FontFamily="{TemplateBinding Control.FontFamily}"
                            FontSize="{TemplateBinding Control.FontSize}"
                            FontWeight="{TemplateBinding Control.FontWeight}"
                            Text="{TemplateBinding ContentControl.Content}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource DayButtonHighlightBorderBrushMouseOver}"
                                Property="Border.BorderBrush" />
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{StaticResource DayButtonHighlightBackgroundMouseOver}"
                                Property="Border.Background" />
                        </Trigger>
                        <Trigger
                            Property="ButtonBase.IsPressed"
                            Value="True">
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource CalendarViewPressedBorderBrush}"
                                Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger
                            Property="primitives:CalendarButton.HasSelectedDays"
                            Value="True">
                            <!--Selected months-->
                            <Setter
                                TargetName="Background"
                                Value="{DynamicResource DayButtonHighlightBackgroundPressed}"
                                Property="Border.Background" />
                            <!--<Setter
                                TargetName="NormalText"
                                Value="{DynamicResource ForegroundSelectedMonth}"
                                Property="TextBlock.Foreground" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarButton.HasSelectedDays"
                                    Value="True" />
                                <Condition
                                    Property="UIElement.IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource CalendarViewSelectedHoverBorderBrush}"
                                Property="Border.BorderBrush" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="primitives:CalendarButton.HasSelectedDays"
                                    Value="True" />
                                <Condition
                                    Property="ButtonBase.IsPressed"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                TargetName="HighlightBorder"
                                Value="{DynamicResource CalendarViewSelectedPressedBorderBrush}"
                                Property="Border.BorderBrush" />
                        </MultiTrigger>
                        <Trigger
                            Property="primitives:CalendarButton.IsInactive"
                            Value="True">
                            <Setter
                                TargetName="Background"
                                Value="{DynamicResource SystemControlDisabledChromeMediumLowBrush}"
                                Property="Border.Background" />
                        </Trigger>
                        <Trigger
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter
                                TargetName="NormalText"
                                Value="{DynamicResource CalendarViewBlackoutForeground}"
                                Property="TextBlock.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type primitives:CalendarButton}"
        BasedOn="{StaticResource DefaultPersianCalendarButtonStyle}" />
    <Style
        x:Key="DefaultPersianCalendarStyle"
        TargetType="{x:Type pdtwt:PersianCalendar}">
        <Setter
            Property="pdtwt:PersianCalendar.CalendarItemStyle"
            Value="{StaticResource DefaultPersianCalendarItemStyle}" />
        <Setter
            Property="pdtwt:PersianCalendar.CalendarDayButtonStyle"
            Value="{StaticResource DefaultPersianCalendarDayButtonStyle}" />
        <Setter
            Property="pdtwt:PersianCalendar.CalendarButtonStyle"
            Value="{StaticResource DefaultPersianCalendarButtonStyle}" />
        <Setter
            Property="Control.Foreground"
            Value="{DynamicResource CalendarViewForeground}" />
        <Setter
            Property="Control.Background"
            Value="#FFEFEFEF" />
        <Setter
            Property="Control.BorderBrush"
            Value="{DynamicResource CalendarViewBorderBrush}" />
        <Setter
            Property="Control.BorderThickness"
            Value="1" />
        <Setter
            Property="FrameworkElement.HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="FrameworkElement.VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Control.IsTabStop"
            Value="False" />
        <Setter
            Property="primitives:ControlHelper.CornerRadius"
            Value="{DynamicResource ControlCornerRadius}" />

        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type pdtwt:PersianCalendar}">
                    <Grid
                        x:Name="PART_Root"
                        SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <primitives:CalendarItem
                            x:Name="PART_CalendarItem"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}"
                            Style="{TemplateBinding pdtwt:PersianCalendar.CalendarItemStyle}"
                            primitives:ControlHelper.CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type pdtwt:PersianCalendar}"
        BasedOn="{StaticResource DefaultPersianCalendarStyle}" />
    <Style
        x:Key="PersianDatePickerCalendarStyle"
        TargetType="{x:Type pdtwt:PersianCalendar}"
        BasedOn="{StaticResource DefaultPersianCalendarStyle}">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type pdtwt:PersianCalendar}">
                    <primitives:ThemeShadowChrome
                        x:Name="Shdw"
                        IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"
                        CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True"
                        primitives:OpeningAnimationHelper.Storyboard="{DynamicResource OpeningStoryboard}">
                        <FrameworkElement.Resources>
                            <Storyboard
                                x:Key="OpeningStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.100"
                                    Storyboard.Target="{Binding ElementName=Shdw}" />
                            </Storyboard>
                        </FrameworkElement.Resources>
                        <StackPanel
                            x:Name="PART_Root">
                            <primitives:CalendarItem
                                x:Name="PART_CalendarItem"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                Background="{TemplateBinding Control.Background}"
                                Style="{TemplateBinding pdtwt:PersianCalendar.CalendarItemStyle}"
                                primitives:ControlHelper.CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />
                        </StackPanel>
                    </primitives:ThemeShadowChrome>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>